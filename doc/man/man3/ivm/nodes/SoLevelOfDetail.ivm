NAME SoLevelOfDetail SoLvlOfDtl "" {
level-of-detail switching group node
}

INCLUDE nodes/SoLevelOfDetail.h

DESC {
The children of this
node typically represent the same object or objects at varying levels
of detail, from highest detail to lowest. The size of the objects when
projected into the viewport is used to determine which version to use
(i.e., which child to traverse).
\p
The size is computed as the area of the screen rectangle enclosing the
projection of the 3D bounding box that encloses all of the children.
When rendering, this size is compared to the values in the
\vscreenArea\. field. If the size is greater than the first value,
child 0 is traversed. If it is smaller than the first, but greater
than the second, child 1 is traversed, and so on. If there are fewer
children than are required by this rule, the last child is traversed.
The \vscreenArea\. field contains just 0 by default, so the first
child is always traversed.
\p
The size calculation takes the current complexity into account. If the
complexity is 0 or is of type \kBOUNDING_BOX\., the last child is
always traversed. If the complexity is less than .5, the computed size
is scaled down appropriately to use (possibly) a less detailed
representation. If the complexity is greater than .5, the size is
scaled up. At complexity 1, the first child is always used.
\p
Note that the \cSoLOD\. node is similar to \cSoLevelOfDetail\., except
the switching between levels in the \cSoLOD\. node is based on 
distance from the camera, which is faster than using screen area.
}

FIELD screenArea { Areas to use for comparison }

METHOD "" SoLevelOfDetail() {
Creates a level-of-detail node with default settings.
}

METHOD "" static SoType getClassTypeId() {
Returns type identifier for this class.
}

ACTION SoGLRenderAction, SoRayPickAction, SoCallbackAction {
Only the child with the appropriate level of detail is traversed.
}

ACTION SoGetBoundingBoxAction {
The box that encloses all children is computed. (This is the box that is
needed to compute the projected size.)
}

ACTION others {
All implemented as for \cSoGroup\..
}

ALSO { SoLOD, SoComplexity, SoSwitch, SoGroup }
