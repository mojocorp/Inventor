NAME SoTimerQueueSensor SoTimerQSens "" {
abstract base class for sensors dependent on time
}
INCLUDE sensors/SoTimerQueueSensor.h
DESC {
Timer queue sensors are sensors that trigger themselves at specific
times.  The timer queue is normally processed as part of a programs
main loop when the program is not busy doing something else.  Note
that processing the timer queue is not asynchronous \(em the program must
re-enter its main loop for timers to be triggered.  When the timer
queue is processed, all timers scheduled to go off at or before the
current time are triggered once, in order from earliest to latest.
}

METHOD getTrigTime const SbTime &getTriggerTime() {
Returns the time at which this sensor is scheduled to be triggered.
If the sensor is not scheduled the results are undefined.
}

METHOD sched virtual void schedule() {
Adds this sensor to the timer queue.  Subclasses provide methods for
setting when the sensor will be triggered.
}
METHOD unsched virtual void unschedule() {
If this sensor is scheduled, removes it from the timer queue so that
it will not be triggered.
}
METHOD isSched virtual SbBool isScheduled() {
Returns TRUE if this sensor has been scheduled and is waiting in the
timer queue to be triggered.
}

ALSO { SoTimerSensor, SoAlarmSensor, SoIdleSensor, SoOneShotSensor, 
SoDataSensor }

