NAME SoSFNode SoSNode "" {
field containing a pointer to a node
}

INCLUDE fields/SoSFNode.h

DESC {
This field maintains a pointer to an \cSoNode\. instance,
correctly maintaining its reference count.
\p
\cSoSFNodes\. are written to file as the node they are pointing to.
For example:
\b
mySoSFNodeField Cube \{\}
\.
is an SoSFNode field named 'mySoSFNodeField', pointing to an SoCube
node.  If the node is used elsewhere, the regular DEF/USE instancing
mechanism applies:
\b
anotherSoSFNodeField USE topSeparator
\.
is an SoSFNode field that points to a node named 'topSeparator' that
was DEF'ed earlier in the scene.
}
ALSO { SoField, SoSField, SoMFNode, SoNode }
METHOD "" static SoType getClassTypeId() {}
METHOD "" virtual void getTypeId() const {
Returns the type for this class or a particular object of this class.
}
METHOD Get SoNode * getValue() const {
Returns this field's value.
}
METHOD " " SoNode * operator =(SoNode * newValue) {}
METHOD Set void setValue(SoNode * newValue) {
Sets this field to \anewValue\..
}
METHOD IsEq int operator ==(const SoSFNode &f) const {}
METHOD IsNEq int operator !=(const SoSFNode &f) const {
Returns TRUE if \af\. is of the same type and has the same value as this
field.
}
