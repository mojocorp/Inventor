NAME SbBox3f "" "" { 3D box class }
INCLUDE SbBox.h
DESC {
3D box which has planes parallel to the major axes and is specified by two
points on a diagonal. This class is part of the standard Inventor
datatype classes and is used as input and output to geometry operations (see
\cSoGetBoundingBoxAction\.).
}
METHOD "" SbBox3f() {}
METHOD CreateBounds SbBox3f(float xmin, float ymin, float zmin float xmax,
                            float ymax, float zmax) {}
METHOD CreateMinMax SbBox3f(const SbVec3f &min, const SbVec3f &max) {}
METHOD "" void ~SbBox3f() {
Constructors and destructor for a 3D float box.  \axmin\., \aymin\., \azmin\.,
\axmax\., \aymax\. and \azmax\. are the bounds of the box. \amin\. and
\amax\. are the corners of the diagonal that define the box.
}
METHOD getMinConst const SbVec3f & getMin() {}
METHOD getMaxConst const SbVec3f & getMax() {
Returns the minimum and maximum points of the box.  The minimum point is
the corner of the box with the lowest X, Y, and Z values.  The maximum
point is the corner of the box with the highest X, Y, and Z values.
}
METHOD "" SbVec3f getCenter() {
Returns the center of the box.
}
METHOD extendByPt void extendBy(const SbVec3f &point) {}
METHOD extendByBox void extendBy(const SbBox3f &box) { 
Extends this box (if necessary) to contain the specified point or other box.
}
METHOD intersectPt SbBool intersect(const SbVec3f &point) {} 
METHOD intersectBox SbBool intersect(const SbBox3f &box) { 
Returns \kTRUE\. if the specified \apoint\. or \abox\. intersects this box.
}
METHOD "" void setBounds(float xmin, float ymin, float zmin,
                         float xmax, float ymax, float zmax) {}
METHOD setBoundsMinMax void setBounds(const SbVec3f &min, const SbVec3f &max) {
Sets the corners of the box.
}
METHOD "" void getBounds(float &xmin, float &ymin, float &zmin,
                         float &xmax, float &ymax, float &zmax) {}
METHOD getBoundsMinMax void getBounds(SbVec3f &min, SbVec3f &max) {
Gets the corners of the box.
}
METHOD "" void getOrigin(float &x0, float &y0, float &z0) {
Gets box origin which is the same as the minimum corner of the box.
}
METHOD "" void getSize(float &x, float &y, float &z) {
Gets box size.
}
METHOD "" void makeEmpty() {
Makes an empty box.
}
METHOD "" SbBool isEmpty() {
Returns \kTRUE\. if the box is empty, and \kFALSE\. otherwise.
}
METHOD hasVol SbBool hasVolume() {
Returns \kTRUE\. if all three dimensions of the box have positive size,
and \kFALSE\. otherwise.
}
METHOD "" void getSpan(SbVec3f &dir, float &dMin, float &dMax) {
Finds the span of a box along a specified direction.  The span is
the total distance the box occupies along a given direction.  The total
distance is returned in the form of a minimum and maximum distance from
the origin of each of the corners of the box along the given direction.
The difference between these two values is the span.
}
METHOD xf void transform(const SbMatrix &mx) {
Transforms box by matrix, enlarging box to contain result.
}
METHOD getVol float getVolume() {
Returns the volume of the box.
}
ALSO { SbXfBox3f, SbBox2f, SbBox2s, SbVec3f, SbVec2f, SbVec2s,
       SbMatrix, SoGetBoundingBoxAction }

