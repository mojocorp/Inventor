NAME SbCylinderSheetProjector "SbCylSheetProj" "" { cylinder-sheet projector }

INCLUDE projectors/SbCylinderSheetProjector.h

DESC { \cSbCylinderSheetProjector\. 
projects a window space point (usually based on the mouse location)
onto the surface of a cylinder with a hyperbolic sheet draped over it.
This allows smooth transitions onto and off of the cylinder.
Two projected points can produce a rotation
along the cylinder's axis.
When the mouse position projects on to the sheet, the
rotations will be as if the sheet is being dragged,
causing the cylinder to roll beneath it.
\p
Incremental changes (delta rotation) can be computed during
interactive sessions. Cylinder projectors are typically used to write
interactive 3D manipulators and viewers.
}

METHOD "" SbCylinderSheetProjector(SbBool orientToEye = TRUE) {}
METHOD "createCyl" SbCylinderSheetProjector( const SbCylinder &cyl,
			      SbBool orientToEye = TRUE) {
Constructors. The first uses a default cylinder aligned with the Y axis
with radius 1.0; the cylinder is supplied in the second.
The \vorientToEye\.
parameter determines whether the sheet is perpendicular to the
eye, or perpendicular to the cylinder's Z axis.  Setting that parameter to TRUE
(the default) specifies that the plane be perpendicular to the
eye, which is most often the desired behavior.
\p
The default view volume is undefined, and the working space is identity.
}

METHOD "" ~SbCylinderSheetProjector() { Destructor. }
    
ALSO { 
SbCylinderSectionProjector,
SbCylinderPlaneProjector,
SbLineProjector, SbPlaneProjector, SbSpherePlaneProjector,
SbSphereProjector, SbSphereSectionProjector, SbSphereSheetProjector
}



